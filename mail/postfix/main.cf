### Global-ish settings

# Consider my hostname, domain, and origin to all be robertou.com.
# We're a little bit off from convention because the mail server isn't on
# a subdomain like mx.robertou.com.
myhostname = robertou.com
myorigin = robertou.com
mydomain = robertou.com
# Use new queue ID system
enable_long_queue_ids = yes
# These network ranges are considered "internal" and allowed to essentially
# bypass all checks. The extra LAN ranges are for lxc.
mynetworks = 127.0.0.0/8 [::ffff:127.0.0.0]/104 [::1]/128 10.111.111.0/24 10.111.222.0/24 [2600:3c01:e000:1ab::1:0]/112 [2600:3c01:e000:1ab::5465:7374:0]/112
# TODO: Test implications of making this yes.
smtputf8_enable=no
# Use new default settings
compatibility_level=2
# Session resumption is a bit problematic for forward secrecy here.
# We pick the less of the evils and allow only session IDs despite them
# being written to disk. Session tickets are worse if the session ticket
# key is never rotated (which it isn't).
tls_session_ticket_cipher=
recipient_delimiter = +

### Ingress flow

# 100 MiB
message_size_limit = 104857600

## "From Internet" (port 25) flow. This is where all of the badness comes
## from, and this section contains all of the checking settings for that.
## (Some of these settings get overridden in master.cf for other parts of
## the ingress flow. These settings are here because I feel it is less
## confusing this way.)

# TLS parameters
smtpd_tls_cert_file=/etc/ssl/certs/robertou-tls-full.pem
smtpd_tls_key_file=/etc/ssl/private/robertou-tls.key
smtpd_tls_security_level = may
smtpd_tls_loglevel = 1
smtpd_tls_received_header = yes
smtpd_tls_session_cache_timeout = 3600s
smtpd_tls_session_cache_database = btree:${data_directory}/smtpd_scache
# Client certs
smtpd_tls_CAfile=/etc/ssl/certs/robertou-client-pki.pem
smtpd_tls_CApath=
tls_append_default_CA=no

# Error tolerance
smtpd_soft_error_limit = 3
smtpd_hard_error_limit = 12
smtpd_helo_required = yes

# Rules for what senders can do
smtpd_recipient_limit = 16
smtpd_delay_reject = yes

smtpd_client_restrictions =
    permit_mynetworks,
    reject_rbl_client zen.spamhaus.org,
    reject_rhsbl_reverse_client dbl.spamhaus.org,
    permit
smtpd_helo_restrictions =
    permit_mynetworks,
    warn_if_reject reject_non_fqdn_hostname,
    reject_invalid_helo_hostname,
    permit
smtpd_sender_restrictions =
    permit_mynetworks,
    warn_if_reject reject_non_fqdn_sender,
    reject_unknown_sender_domain,
    reject_rhsbl_sender dbl.spamhaus.org,
    permit
smtpd_relay_restrictions =
    permit_mynetworks,
    reject_unauth_pipelining,
    reject_non_fqdn_recipient,
    reject_unknown_recipient_domain,
    reject_unauth_destination,
    permit
smtpd_recipient_restrictions =
    permit_mynetworks,
    reject_unauth_pipelining,
    check_policy_service unix:private/policy-spf,
    permit
smtpd_data_restrictions =
    permit_mynetworks,
    reject_unauth_pipelining,
    permit
# We don't use ETRN
smtpd_etrn_restrictions =
    permit_mynetworks,
    reject

# Misc. ingress flow stuff (still Internet)
# TODO: Why does this need to be long?
policy-spf_time_limit = 3600s
# Forward everything from port 25 to amavis on port 10025 for spam filtering.
smtpd_proxy_filter=127.0.0.1:10025
smtpd_proxy_options=speed_adjust

## (amavis will reinject on port 10026 (as well as Mailman).
## Restrictions are disabled in master.cf for that.)

## Submission port 587 settings are in master.cf

## Ingress, but not via Internet

# We do want to append origin to random locally-generated stuff
append_at_myorigin = yes
# This should never happen and doesn't really "work" anyways.
append_dot_mydomain = no

### Egress/delivery flow

## To script. The transport map picks a transport for each domain, but it
## is pretty much only used to a) list valid virtual domains and
## b) make the mail script domain work.
transport_maps = pgsql:/etc/postfix/pgsql_transport.cf

## To local. We don't use local delivery here except for Mailman.
## All real accounts go through virtual mailboxes.
# We need to accept local delivery for localhost in order for
# Mailman to work.
mydestination = localhost
# Don't need this since we don't have real local accounts.
biff = no
# Aliases required for Mailman. Set the alias_database field to
# empty because we don't want newaliases to make updates.
alias_maps = hash:/var/lib/mailman/data/aliases
alias_database =
# The only valid recipients are the addresses Mailman knows about.
local_recipient_maps = hash:/var/lib/mailman/data/aliases
mailbox_size_limit = 0

## Forwarded mail SMTP
smtp_tls_CAfile = /etc/ssl/certs/ca-certificates.crt
smtp_tls_security_level = may
smtp_tls_note_starttls_offer = yes
smtp_tls_session_cache_database = btree:${data_directory}/smtp_scache

# how long to wait when servers connect before receiving rest of data
smtp_helo_timeout = 60s

## Virtual delivery (including aliases that are forwarded)
# this is for the list of users
virtual_mailbox_maps = pgsql:/etc/postfix/pgsql_mailbox.cf
# and this is for aliases
virtual_alias_maps = pgsql:/etc/postfix/pgsql_alias.cf, hash:/var/lib/mailman/data/virtual-mailman
# and this is for domain lookups
virtual_mailbox_domains = pgsql:/etc/postfix/pgsql_domains.cf
# send it all to dovecot
virtual_transport = lmtp:unix:private/dovecot-lmtp

virtual_mailbox_limit = 0

## Deferrals and delays

# how long if undelivered before sending warning update to sender
delay_warning_time = 4h
# how long to keep message on queue before return as failed.
maximal_queue_lifetime = 7d
# max and min time in seconds between retries if connection failed
minimal_backoff_time = 300s
maximal_backoff_time = 8000s
